'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/web-domains/google-domains/','title':"Google Domains",'section':"Web Domains",'content':"Google Domains #  Google Domains is Google\u0026rsquo;s Domain Name Registrar and Domain Name Server offering.\nGoogle Domains offers a single location to manage Domain Name purchases, and DNS configurations for purchased domains.\nFeatures #   Privacy Protect  "});index.add({'id':1,'href':'/docs/hugo/','title':"Hugo",'section':"Docs",'content':"Hugo #  Hugo is a Static-Site-Generator written in Go. It claims to be the fastest SSG around because it is based on Golang\u0026rsquo;s html/templating libraries.\nIt can be used to generate beautiful static websites and comes with a number of themes to choose from.\nInstallation #  I chose the simplest installtion for MacOs by using HomeBrew.\nbrew install hugo Modules Modules There is another way to use hugo based on Go Modules. This is the future, but it says it isn\u0026rsquo;t fully tested yet. I may switch to it in the future.\nUntil then the default way to install themes is with Git Submodules.\n  Customizing #  You can customize nearly anything you like about Hugo (and then export that as a theme if you wish). Or you can layer your changes on top of an existing theme.\nHugo makes a bunch of assumptions about the structure of your site, as all of your content pages will be under the content/ directory. Depending on which subdirectory you choose it will interpret the content type. You can override this with a Front Matter, basically a YAML block at the top of the markdown file which Hugo will use when generating. The Front Matter can override most things.\nIt is useful to examine the theme for which layouts / config params it is looking for. These isn\u0026rsquo;t a clean declaration of all the options available. See variables docs for existing builtin Hugo variables at the Site and Page level.\nSome useful ones:\n Type: Override the inferred content type, meaning you can use a different template Slug: Override the url slug used (default is the file name). E.x. /pages/apps-slug. Url: Override the url from the site root to this page. E.x. /pages/apps -\u0026gt; /apps. This can create circular references so be careful.  "});index.add({'id':2,'href':'/docs/web-domains/','title':"Web Domains",'section':"Docs",'content':"Web Domains #  How the internet works is a broad and very technical topic which involves everything from Internet Protocols to Routing Tables. Others have already summarized the it better than I can.\nAnatomy of a URL #  The important thing for understanding Web Hosting is how browsers and routers translate a URL into a concrete destination server. A URL stands for Uniform Resource Locator; meaning it is a Universal identifier to Locate a Resource on the internet.\nURLs are made up of several component parts, each of which has a specific meaning:\nImage from Doepud Web Design See this excellent write-up for details about all URL components, but for setting up Web Hosting we are mainly concerned with the following:\n Top-level Domain - TLDs are the highest level divisions in the Domain Name System. These domains are usually mained by International Organizations and include common domains like .com, .org, .gov, as well as more specialized domains like .fr, .jp, and Google\u0026rsquo;s .dev. Domain Name - Domain names are specific domains within a Top-level Domain and are usually owned by a single entity. For examlpe google.com is the domain name for Google Inc. under the .com top-level domain. Subdomain - Subdomains are named domains within a particular Domain Name. For example maps.google.com specifies the maps subdomain under the google.com domain. www is the default subdomain for all domains and can often be omitted when entering a URL.  Purchase a Domain Name #  When an end user wants to register a new website location with the DNS, they will usually purchase a Domain Name from a Registrar.\nTop-level Domains are specified by international organizations and are not available for ownership by any business entity.\nDomain names can be purchased on a monthly or yearly basis and no other user can claim that Domain in the mean time.\nOnce you own a Domain Name, you can also supply an unlimited number of Subdomains for any purpose.\nThere are a large number of DNS Registrars from which you can purchase domains. These are some of the most popular:\n Google Domains Wix.com GoDaddy namecheap  My best experience so far is with Google Domains, as they usually had lower prices on many domains. Google is the only provider of their new TLDs .dev and .page.\n"});index.add({'id':3,'href':'/posts/','title':"Blog",'section':"Introduction",'content':"Wiki Blog has been removed, as this site only supports the Knowledge Wiki.\nFor personal blog, see see My Blog.\nFor the original Hugo Book Theme example blog, see Example Blog. It has some good information about Hugo-Book and Hugo in general.\n"});index.add({'id':4,'href':'/docs/version-control/git/','title':"Git",'section':"Version Control",'content':"Git #  Git is a popular Version Control System.\n"});index.add({'id':5,'href':'/docs/hugo/themes/','title':"Themes",'section':"Hugo",'content':"Themes #  Themes are packages of templates, css, and javascript used by the Hugo engine to produce a Static Site. There are many popular themes to choose from highlighted on Hugo Themes.\nBelow are my notes and observations on the few with which I am familiar.\nMinimal #  Minimal is a simple, clean interface and a reasonable amount of features.\nnikitavoloboev uses it for his home site and I am following in his example to using it for my own home site.\nBook #  Book is a minimalist theme specialized for documentation websites.\nBook has many of the features ideal for a Knowledge Wiki:\n Flexible, tree-based navigation menu Simple and effective shortcodes Table of Contents for each page Git Integration for calculating last edit time and one-click editing. Integrated Search using flexsearch Light/Dark Theme  I can currently using this theme for my Knowledge Wiki.\nZdoc #  Zdoc (Demo) is an opinionated wiki framework for creating documentation websites.\nZdoc differs from Book in the following ways:\n Navigation Menu only displays the current tree level Similar shortcodes Language Dropdown Integrated Search using Fuse.js Light/Dark Theme toggle  Search experience is better because it includes match previews. Search Index is pre-built at Hugo build time so is fast on the client.\nLight/Dark Theme toggle is gives better user control, and saves preference to Local Storage.\nHowever, I found it a bit more cumbersome and visualy more noisy than I intended. It doesn\u0026rsquo;t match the Minimal theme of brisberg.dev as well as I\u0026rsquo;d like.\nMy previous attempt to use this theme is preserved in this branch for posterity.\n"});})();